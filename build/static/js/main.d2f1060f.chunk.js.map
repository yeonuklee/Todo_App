{"version":3,"sources":["Todos.js","TodoItems.js","Form.js","img.png","TodoTemplate.js","App.js","reportWebVitals.js","index.js"],"names":["Todos","todo","setInput","tRemove","tComplete","tEdit","filtered","todoRef","createRef","priority","changeText","e","map","x","id","task","current","value","isEditMode","isPriority","sorting","keyPress","shiftKey","console","log","key","cancelChange","className","isCompleted","type","defaultValue","ref","onKeyPress","onClick","onDoubleClick","style","fontWeight","color","textDecoration","TodoItems","status","setStatus","setFiltered","filter","placeholder","sort","a","b","Form","setTask","input","handleChange","preventDefault","tAdd","text","addInput","length","onSubmit","onChange","target","name","class","TodoTemplate","useState","useEffect","done","tasks","src","img","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2f1060f.chunk.js","sourcesContent":["import React, { Children, useState, createRef } from \"react\";\nimport {\n  MdCheckBoxOutlineBlank,\n  MdCheckBox,\n  MdRemoveCircleOutline,\n  MdDeleteForever,\n  MdDone,\n  MdEdit,\n} from \"react-icons/md\";\n\nconst Todos = ({ todo, setInput, tRemove, tComplete, tEdit, filtered }) => {\n  const todoRef = createRef();\n  const newText = \"\";\n  let priority = false;\n\n  const changeText = (e) => {\n    // console.log(todoRef.current.value);\n    setInput(\n      filtered.map((x) => {\n        if (x.id == todo.id) {\n          x.task = todoRef.current.value;\n          x.isEditMode = !x.isEditMode;\n          x.isPriority = priority ? !x.isPriority : x.isPriority;\n          x.sorting = x.isPriority ? 1 : 0;\n        }\n        return x;\n      })\n    );\n  };\n  const keyPress = (e) => {\n    priority = e.shiftKey ? true : false;\n    console.log(\"priority\", priority);\n    if (e.key == \"Enter\") changeText();\n  };\n  const cancelChange = () => {\n    setInput(\n      filtered.map((task) => {\n        if (task.id == todo.id) {\n          task.isEditMode = !task.isEditMode;\n        }\n        return task;\n      })\n    );\n  };\n  const editTodo = (key) => {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          defaultValue={newText}\n          ref={todoRef}\n          onKeyPress={keyPress}\n        />\n        <MdEdit onClick={changeText} />\n        <MdRemoveCircleOutline onClick={cancelChange} />\n      </div>\n    );\n  };\n\n  const fixedTodo = () => {\n    return (\n      <span\n        onDoubleClick={() => tEdit(todo.id)}\n        style={\n          todo.isPriority\n            ? {\n                fontWeight: \"bold\",\n              }\n            : { color: \"default\" }\n        }\n      >\n        {todo.isPriority ? \"‚ùó\" + todo.task : todo.task}\n      </span>\n    );\n  };\n\n  return (\n    <div className=\"todo\">\n      <div\n        className={todo.isCompleted ? \"completed\" : \"todo-item\"}\n        key={todo.id}\n      >\n        {todo.isEditMode ? editTodo(todo.id) : fixedTodo(todo.id)}\n\n        <MdDone\n          className=\"complete-btn\"\n          onClick={() => tComplete(todo.id)}\n          style={{ textDecoration: \"line-through\" }}\n        />\n        <MdDeleteForever\n          className=\"delete-btn\"\n          onClick={() => tRemove(todo.id)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Todos;\n","import React, { useState } from \"react\";\nimport {\n  MdCheckBoxOutlineBlank,\n  MdCheckBox,\n  MdRemoveCircleOutline,\n} from \"react-icons/md\";\nimport Todos from \"./Todos\";\n\nconst TodoItems = ({ setInput, status, setStatus, filtered, setFiltered }) => {\n  const tRemove = (key) => {\n    setInput(filtered.filter((task) => task.id !== key));\n  };\n\n  const tComplete = (key) => {\n    // console.log(Object.prototype.toString.call(input));\n    console.log(\"zzzzzzzzzz\");\n    setInput(\n      filtered.map((task) => {\n        if (task.id == key) {\n          task.isCompleted = !task.isCompleted;\n          task.sorting = task.isCompleted == true ? -1 : 1;\n        }\n        return task;\n      })\n    );\n  };\n  const tEdit = (key) => {\n    setInput(\n      filtered.map((task) => {\n        if (task.id == key) {\n          task.isEditMode = !task.isEditMode;\n        }\n        return task;\n      })\n    );\n    return (\n      <input\n        className=\"new-name\"\n        type=\"text\"\n        value={key}\n        placeholder=\"Enter new name\"\n      />\n    );\n  };\n\n  filtered.sort((a, b) => {\n    return b.sorting - a.sorting;\n  });\n\n  return (\n    <div className=\"list\">\n      {filtered.map((todo) => (\n        <Todos\n          todo={todo}\n          setInput={setInput}\n          tRemove={tRemove}\n          tComplete={tComplete}\n          tEdit={tEdit}\n          filtered={filtered}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TodoItems;\n","import React, { useState } from \"react\";\nimport { MdAddBox } from \"react-icons/md\";\n\nconst Form = ({\n  task,\n  setTask,\n  input,\n  setInput,\n  status,\n  setStatus,\n  filtered,\n  setFiltered,\n}) => {\n  let priority;\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    task && tAdd(task);\n    setTask(\"\");\n  };\n  const tAdd = (text) => {\n    let addInput = [\n      ...input,\n      {\n        id: input.length + 1,\n        task: text,\n        isCompleted: false,\n        isEditMode: false,\n        isPriority: priority,\n        sorting: priority == true ? 1 : 0,\n      },\n    ];\n    setInput(addInput);\n  };\n  const tFilter = (e) => {\n    setStatus(\"\");\n    if (e.target.value == \"completed\") {\n      setStatus(\"completed\");\n      // setFiltered(input.filter((x) => x.isCompleted === true));\n    } else if (e.target.value == \"incompleted\") {\n      setStatus(\"incompleted\");\n      // setFiltered(input.filter((x) => x.isCompleted === false));\n    } else if (e.target.value == \"all\") {\n      setStatus(\"all\");\n      // setFiltered(input);\n    }\n  };\n\n  //if you press \"shift\" with \"Enter/click\", priority\n  const keyPress = (e) => {\n    priority = e.shiftKey ? true : false;\n  };\n  return (\n    <form onSubmit={handleChange}>\n      <input\n        value={task}\n        type=\"text\"\n        placeholder=\"type here\"\n        onChange={(e) => setTask(e.target.value)}\n        onKeyPress={keyPress}\n      ></input>\n      <MdAddBox\n        className=\"button\"\n        id=\"addBtn\"\n        type=\"submit\"\n        onClick={handleChange}\n      />\n      <div className=\"button\" id=\"box\">\n        <select name=\"todos\" class=\"filter-todo\" onChange={tFilter}>\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"incompleted\">Incompleted</option>\n        </select>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","export default __webpack_public_path__ + \"static/media/img.e59fc979.png\";","import React, { useEffect, useState, createContext, Children } from \"react\";\nimport TodoItems from \"./TodoItems\";\nimport Form from \"./Form\";\nimport img from \"./img.png\";\n\nconst TodoTemplate = () => {\n  const [task, setTask] = useState(\"\");\n  const [input, setInput] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filtered, setFiltered] = useState([]);\n\n  useEffect(() => {\n    if (status == \"completed\") {\n      setFiltered(input.filter((x) => x.isCompleted === true));\n    } else if (status == \"incompleted\") {\n      setFiltered(input.filter((x) => x.isCompleted === false));\n    } else if (status == \"all\") {\n      setFiltered(input);\n    }\n  }, [input, status]);\n\n  //to check if all task are done\n  let done = input.filter((x) => x.isCompleted == false).length;\n\n  //to differentiate between 'task = 0' as a start and 'task = 0' as a completed task.\n  let tasks = input.filter((x) => x.id > 0).length;\n\n  return (\n    <main className=\"todo-list-template\">\n      <div className=\"title\"> To Do List</div>\n      <Form\n        className=\"form-wrapper\"\n        task={task}\n        setTask={setTask}\n        input={input}\n        setInput={setInput}\n        status={status}\n        setStatus={setStatus}\n        filtered={filtered}\n        setFiltered={setFiltered}\n      />{\" \"}\n      <TodoItems\n        className=\"todo-wrapper\"\n        setInput={setInput}\n        status={status}\n        setStatus={setStatus}\n        filtered={filtered}\n        setFiltered={setFiltered}\n      />\n      {done == 0 && tasks > 0 ? (\n        <img className=\"done\" src={img} />\n      ) : done == 0 && task == 0 ? (\n        \"What do you need to do today?\"\n      ) : (\n        <div className=\"message\">{`Still ${done} ${\n          done == 1 ? \"task\" : \"tasks\"\n        } in progress`}</div>\n      )}\n    </main>\n  );\n};\n\nexport default TodoTemplate;\n","import \"./App.css\";\nimport TodoTemplate from \"./TodoTemplate\";\nimport React, { useState } from \"react\";\nimport Form from \"./Form\";\nimport Todos from \"./Todos\";\nimport TodoItems from \"./TodoItems\";\n// class Input extends Component {}\n\nfunction App() {\n  return (\n    <div>\n      <TodoTemplate></TodoTemplate>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}